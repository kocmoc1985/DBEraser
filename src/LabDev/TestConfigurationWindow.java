/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LabDev;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;

/**
 *
 * @author KOCMOC
 */
public class TestConfigurationWindow extends javax.swing.JFrame implements AncestorListener {

    /**
     * Creates new form TestConfigurationWindow
     */
    public TestConfigurationWindow() {
        initComponents();
        initOther();
    }

    private void initOther() {
        System.out.println("width: " + jPanel1.getWidth());
        System.out.println("heigth: " + jPanel1.getHeight());
//        jPanel1.setSize(438, jPanel1.getHeight());
//        this.jPanel1.addAncestorListener(this);
        this.jPanel1.setBackground(Color.yellow);
        this.jPanel1.setPreferredSize(new Dimension(430, 35));
        this.jPanel1.validate();
    }

    public void addRowsTableOne(String[] preparationMethods) {
        //
        for (int i = 0; i < preparationMethods.length; i++) {
            if (i == 0) {
                addRowTableOne("    ", preparationMethods[i]);
            } else if (i < 10) {
                addRowTableOne(" " + i + ":", preparationMethods[i]);
            } else if (i > 10) {
                addRowTableOne("" + i + ":", preparationMethods[i]);
            }
        }
        //
    }

    private void addRowTableOne(String sequence, String prepmethod) {
        JPanelCont container = new JPanelCont(new FlowLayout(FlowLayout.LEFT)); //new FlowLayout(FlowLayout.LEFT)
//        container.setBackground(Color.yellow);
        container.setPreferredSize(getRowSize());
        //
        JLabel lbl = new JLabel(sequence);
        //
        JCheckBox chk = new JCheckBox();
        //
        JTextArea txtarea = new JTextArea(prepmethod);
        txtarea.setPreferredSize(getTxtAreaSize());
        //
        container.add(lbl);
        container.add(chk);
        container.add(txtarea);
        //
        jPanel1.add(container);
        //
        jPanel1.setPreferredSize(new Dimension(jPanel1.getWidth(), jPanel1.getPreferredSize().height + 35));
        //
        jPanel1.validate();
        //
    }

    private Dimension getRowSize() {
        return new Dimension(jPanel1.getWidth() - 10, 31);
    }

    private Dimension getTxtAreaSize() {
        int width_total = jPanel1.getWidth();
        int width = (int) (width_total * 0.85);
        return new Dimension(width, 27);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jScrollPane1.setAutoscrolls(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(430, 500));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        jPanel1.setLayout(flowLayout1);
        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(397, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestConfigurationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestConfigurationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestConfigurationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestConfigurationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                TestConfigurationWindow tcw = new TestConfigurationWindow();
                tcw.setVisible(true);
                tcw.addRowsTableOne(new String[]{
                    "Presse / DVR A Zapf / 25 min / 170c ",
                    "Presse / Klappe 6mm / 10 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",
                    "Presse / Ammi platte / 15 min / 170c ",});
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void resizeAddedEntryTableOne() {

    }

    @Override
    public void ancestorAdded(AncestorEvent ae) {
        // NOT USED SO FAR (2020-10-09)
        if (ae.getSource() instanceof JPanel) { // the jpanel1 is "caught" here 
            //
        } else if (ae.getSource() instanceof JPanelCont) {
            //
        }
    }

    @Override
    public void ancestorRemoved(AncestorEvent event) {
    }

    @Override
    public void ancestorMoved(AncestorEvent event) {
    }
}

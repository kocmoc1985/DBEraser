/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LabDev.sec;

import LabDev.LabDevTestOrder;
import MyObjectTable.ShowMessage;
import forall.GP;
import forall.HelpA_;
import forall.SqlBasicLocal;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;

/**
 *
 * @author KOCMOC
 */
public class CreateNewFromTable extends javax.swing.JFrame implements MouseListener {

    private final SqlBasicLocal sql;
    private final String query;
    private final String[] colsToHide;
    private final ShowMessage sm;
    private final Object consumerClass;
    private final String title;
    private String[] toReturn;

    /**
     * Creates new form CreateNewFromTable
     *
     * @param consumerClass
     * @param sql
     * @param query
     */
    public CreateNewFromTable(Object consumerClass, SqlBasicLocal sql,
            String query, String[] colsToHide, ShowMessage sm,String title) {
        initComponents();
        //
        this.title = title;
        initOther();
        //
        this.consumerClass = consumerClass;
        this.sql = sql;
        this.colsToHide = colsToHide;
        this.query = query;
        this.sm = sm;
        
        //
        buildTable();
        //
    }

    private void initOther() {
        this.jTable1.addMouseListener(this);
        this.setTitle(title);
        HelpA_.centerAndBringToFront(this);
        this.setIconImage(new ImageIcon(GP.IMAGE_ICON_URL_RECIPE).getImage());
    }

    private void buildTable() {
        HelpA_.build_table_common(sql, sm, jTable1, query, colsToHide);
    }

    public String[] get() {
        return toReturn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/correct.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        select();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void select() {
        //
        if(HelpA_.confirm() == false){
            return;
        }
        //
        if (consumerClass instanceof LabDevTestOrder) {
            String testCode = HelpA_.getValueSelectedRow(jTable1, "CODE");
            String id = HelpA_.getValueSelectedRow(jTable1, "ID_Proc");
            toReturn = new String[]{testCode, id};
            //
            LabDevTestOrder ldst = (LabDevTestOrder) consumerClass;
            ldst.selectButtonClicked_a(toReturn,this);
            //
        }
        //
    }

//    java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CreateNewFromTable().setVisible(true);
//            }
//        });

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == jTable1 && e.getClickCount() == 2) {
            select();
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

}

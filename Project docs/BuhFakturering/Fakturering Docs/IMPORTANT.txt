[KUND KATEGORI && COMPANY MIXCONT][2021-08-10]

Now you can just change the "KUND KATEGORI" via the "KUNDER" tab.
What does it affect? It affects:
the language of the fatura print,
the stamp,
and currency rate usage.

KATEGORI A: Inhemska fakturor like "Trelleborg Ind. AB"
KATEGORI B: EU fakturor like "QEW" and "Trico/Fedmog"
KATEGORI C: Utländska fakturor like Compounds AG

Search for: [#KUND-KATEGORI-CONDITION#]

________________________________________________________________________________________________________
[EUR SEK FOR COMPANY MIXCONT ONLY][2021-08-09]

When you are logged in under comapny name "MixCont AB" EUR / SEK is activated which means:

1. When you make invoice you provide the prices in EUR
2. The "TOTAL" for the invoice is saved in SEK which means [total price in EUR] * [EUR/SEK KURS] 
3. When you make "Print" the total ammount in SEK will be devided by "EUR/SEK" kurs which is for the moment "**PERMANENT";

**PERMANENT - NEVER change the "KURS" until you implement an addtional field in database with eur/sek kurs [2021-08-09]
If you change the "KURS" it will show wrong for all of the previous invoices using "EUR"

Search for: [#EUR-SEK#]
________________________________________________________________________________________________________
[EASY INSTALLATION][2021-07-XX]

1. It was decided to not use the ".exe" installation by the "Install Creator Pro" because
of the warnings during the download and warnings during the installation.

2. The "NEW" type of installation means that you just download the "la.jar" file. When you click it
first time it makes following (mentioned below is valid only for Windows Os):

- Creates the "la" folder
- Extracts the "ic.ico" shortcut icon from the inside of "la.jar"
- Automatically creates the "shortcut.cmd" script and saves it to the "la" folder
- Runs the "shortcut.cmd" script
- Deletes the "shortcut.cmd" script
- All actions named above are done by the "BuhInvoice.sec.CreateShortcut.java"

________________________________________________________________________________________________________
[OBLIGATORY UPDATE FUNCTION][2021-06-18]

Main idea: some updates on server side may cause that the client side will not work. Therefore this function is needed.
So setting "obligatory":"true" will force the user to download the latest version. The program will not work otherwise. 
Also note that mentioned above is true: if the version recieved from the "version" file from PHP is newer then the actual version.

Search for: [#OBLIGATORY-UPDATE#] in the "DBEraser.proj"

Also remember the´version file: "C:\xampp\htdocs\MCWebNew\php\version" -> {"version":"110","obligatory":"true"}
________________________________________________________________________________________________________
[COUNT IMPORTANT STATISTIC VALUES LIKE: INGÅENDE MOMS SEDAN ÅRS START][2021-05-16]

Counting "nyckel tal" like: ingående moms sedan års start och andra värden sedan års start

Search for: [#NYCKEL-TAL#]

________________________________________________________________________________________________________
[AMMOUNT OF INVOICES SHOWN BY DEFAULT][2021-04-XX]

When the program loads the program shows invoices for 365 days back -> uses: "DB.PHP_FUNC_PARAM_GET_KUND_FAKTUROR__ONE_YEAR_BACK"

To see aboslutely all invoices yo need to press the button "VISA ALLA" -> uses: "DB.PHP_FUNC_PARAM_GET_KUND_FAKTUROR__ALL"

________________________________________________________________________________________________________
[SWITH ROW IN MAIN FAKTURA TABLE  WITHOUT COLLISION][IMPORTANT][IMPORTANT][2021-05-16]

The problem was that if you switched fast between invoices from "ALLA FAKTUROR" tab, collisions 
sometimes happened. Which means the lower table was filled with entries from several invoices.

See: [#SWITCH-FAKTURA-NO-COLLISION#]

________________________________________________________________________________________________________
[SAVE FAKTURAKUND RELATED DATA ("JComboBoxed") - AS FOR EXAMPLE "BETAL VILKOR"][2021-05-05]

The main idea is to save last chosen parameter as for example "BETAL VILKOR" for a given customer.
This topic covers only the values stored in "JCOMBOBOX'es"

Search for: [#FAKTURAKUND-RELATED-SAVE-RESTORE-JCOMBO#]
Can also be interresting: [#FAKTURAKUND-RELATED-SAVE-RESTORE-JCOMBO#][#INITIAL LOAD#]

________________________________________________________________________________________________________
[BUH_CONSTANTS - AQUIRED FROM PHP][IMPORTANT][IMPORTANT][2021-05-05]

The main idea is that it's possible to change constants like "RUT_MAX" without updating the program but instead changing
it in the "buh_constants" mysql table.

Search for [#BUH-CONSTANTS#]
________________________________________________________________________________________________________
[SERVICE EMAILS: LIKE - USER CREATED ACCOUNT, DELETED etc..][2021-04-12]

Such messages are sent to "kocmoc1985@gmail.com"

at the moment [2021-04-12] following service messages exist;
- New user account is created
- User deletes it's account

________________________________________________________________________________________________________
[DATE FORMAT - "yyyy-MM-dd"][2021-04-12]

This topic corresponds to project: "DBEraser/BuhInvoice"

Search for: GP_BUH.DATE_FORMAT_BASIC

The universal "DATE-FORMAT" is applied to the entire "DBEraser/BuhInvoice" project.
- The "DATE-FORMAT" is defined in "GP_BUH.DATE_FORMAT_BASIC"
- All "DATE-FUNCTIONS" used by the "DBEraser/BuhInvoice" project are defined in the "GP_BUH.class"

Regarding the PHP side:
- MySql is using default format="yyyy-MM-dd" -> 100% verified
________________________________________________________________________________________________________
[DISTRIBUTION - BUILD - FAT JAR - EXCLUDE PACKAGES][IMPORTANT]

LAST BUILD MADE: 2021-03-31

[BEFORE BUILD]
Set variable: HelpBuh.class -> "IS_DISTRIBUTION=true"
This enables following:
	DOMAIN_LA = true;
	HTTPS = true;
	ERR_OUTPUT_TO_FILE__DISTRIBUTED = false;
	USE_TEST_DB = false;
	USE_TEST_SCRIPTS = false;
	GP_BUH.TRACKING_TOOL_TIP_ENABLED = false;
	GP_BUH.CUSTOMER_MODE = true;

[BUILD]
See: CorsairUsb\HERE\KNOWLEDGE\JAVA.vsd -> tab: "Fat, Obfuscated and excluded"

So short instruction is following, consider that all settings are DONE then you have to do following:
1. Clean and Build
2. Build a fat and obfuscated jar: right click on "build.xml" -> "Run Target" -> "Other Targets" -> "package-for-store"
3. The final ".jar" is placed in a folder, named: "store"

________________________________________________________________________________________________________
[TEST-DB & TEST SCRIPTS FOR TESTING OF THE NEW FUNCTIONALITY][2021-03-09] [SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT]

So the main idea is to have a *TEST-DB* and *TEST-SCRIPTS* when testing new features.

Search for: [#TEST-DB#] in both projects
Search for: [#TEST-SCRIPTS#] in the java "DBEraser.proj"
Search for: "$_SESSION["use_test_db"]" in "MCWebNew.proj"


INSTRUCTIONS WHEN IMPLEMENTING NEW FUNCTIONS:

[TEST WITH BOTH TEST-DB AND TEST SCRIPTS] / [*BEST AND MOST SECURE OPTION*]:
1. Be sure that the "TEST-DB" is up to date -> here i mean EXACTLY same structure as the MAIN database
2. Be sure that the "TEST-SCRIPTS" are up to date in the "php-test" folder -> here i mean the same version as the real scripts from the "php" folder
3. Commit & Push the MCWebNew before starting to implement the new function -> in order to be able to roll back easily

[TEST WITH TEST-DB AND REAL SCRIPTS]:
1. Be sure that the "TEST-DB" is up to date -> here i mean EXACTLY same structure as the MAIN database

[TEST WITH REAL DB AND TEST SCRIPTS]:
1. Be sure that the "TEST-SCRIPTS" are up to date in the "php-test" folder -> here i mean the same version as the real scripts from the "php" folder

Pay attention at the directories on FTP:
1. folder "php" -> is the main folder with "*********WORKING/ONLINE" scripts
2. folder "php-test" -> is the folder for testing the scripts
 

Pay attention at the databases on "one.com":
1. The "*********WORKING/ONLINE" database is named "lafakturering_semain"
2. The test database is named "lafakturering_setest"

________________________________________________________________________________________________________
[INTERNET CHECK ON START UP][2021-02-25]
Since [2021-02-25] LAFakturering checks for the internet connection and does not start if internet is missing:

See here: Home.class -> startUp()


________________________________________________________________________________________________________
[BASIC OPERATIONS EXAMPLES, JAVA <-> PHP: INSERT, SELECT..]

[INSERT EXAMPLE:]

private static void insert() {
	//
	HashMap<String, String> map = new HashMap<>(); // ALT 1 -> No TableInvert involved
	//
	HashMap<String, String> map = tableInvertToHashMap(TABLE_INVERT_2, DB.START_COLUMN); // ALT 2 -> TableInvert INVOLVED
	//
	map.put(DB.BUH_FAKTURA_RUT_PERSON__KUNDID, "777"); // OBS! 777 is "fake" -> kundId is defined on the serverSide
	map.put(DB.BUH_FAKTURA_RUT_PERSON__RUTID, rutId);
	map.put(DB.BUH_FAKTURA_RUT_PERSON__FORNAMN, "Andrei");
	map.put(DB.BUH_FAKTURA_RUT_PERSON__EFTERNAMN, "Brassas");
	map.put(DB.BUH_FAKTURA_RUT_PERSON__PNR, "850131-0777");
	map.put(DB.BUH_FAKTURA_RUT_PERSON__SKATTEREDUKTION, "1799");
	//
	String json = JSon.hashMapToJSON(map);
	//
	try {
		executePHP(DB.PHP_SCRIPT_MAIN, DB.PHP_FUNC_FAKTURA_RUT_PERSON_ENTRY_TO_DB, json);
	} catch (Exception ex) {
		Logger.getLogger(CustomersA_.class.getName()).log(Level.SEVERE, null, ex);
	}
	//
}

[SELECT EXAMPLE:]

private static void buh_faktura_rut__get__rut_person() {
	//
	String json = BUH_INVOICE_MAIN.getSELECT_(DB.BUH_FAKTURA__ID__, "339");
	//
	try {
		//
		String json_str_return = HelpBuh.executePHP(DB.PHP_SCRIPT_MAIN,
				DB.PHP_FUNC_PARAM_GET_RUT_PERSON, json);
		//
		ArrayList<HashMap<String, String>> entries = JSon.phpJsonResponseToHashMap(json_str_return);
		//
		for (HashMap<String, String> val : entries) {
			System.out.println("out: " + val);
		}
		//
	} catch (Exception ex) {
		Logger.getLogger(HelpBuh.class.getName()).log(Level.SEVERE, null, ex);
	}
	//
}
________________________________________________________________________________________________________
[HIDE FAKTURA FIELDS - IF FYSISK PERSON - IF NOT PERSON]

Search for: [#SHOW-HIDE--IF#]
________________________________________________________________________________________________________
[LOGO NOT ALWAYS LOADING WHEN PRESSING "PRINT" BTN][2020-12-29]

It seems to be solved, see: HTMLBasic.class -> public void go() -> invalidate(), validate(), repaint()

I have tried approx. 15 times in row.

________________________________________________________________________________________________________
[HIDE COLUMNS ARTICLES-TABLE][2020-12-27]***************************

Search for: [#HIDE-COLS-ARTICLES-TABLE#]

It always takes much time to find places where to add column hiding
________________________________________________________________________________________________________
[JPANEL BACKGROUND - BACKGROUNDPANEL] [2020-11-15]

Setting a background image for a JPanel.

See: forall.package -> BackgroundPanel.class

TRANSPARENCY: See: Home.class -> makeTransparent(..) function

How to use: From graphical editor -> Click on a JPanel -> Choose "Customize code" -> have following: 
jPanel = new BackgroundPanel();

Then see BuInvoice.class -> "private void setHomePageBackground()"

OBS! If the "bg.jpg" is not found, the standard background is used/active

VERY IMPORTANT: JLabels are transparent

________________________________________________________________________________________________________
[DESKTOP PATH - FOLLOW THIS SUBJECT] [2020-10-28]

I discovered that on Linas PC the faktura was not printed to desktop when choosing option, send with Outlook.

I found following method for getting desktop path: javax.swing.filechooser.FileSystemView.getFileSystemView().getHomeDirectory()

I dont now if it fixes the problem with Linas PC yet
________________________________________________________________________________________________________
[MOMS SATS REPLACING THE "%" IN JTABLE][2020-10-21]

Search for: replaceAll("%", "")

________________________________________________________________________________________________________
[INSERT JAVA -> PHP ESSENTIALS -> EMPTY VALUES][2020-10-15]

It's a problem if inserting when some values are empty, this applies mainly for the prepared statements.
Consider following: INSERT INTO buh_f_artikel (fakturaId, artikelId, antal, enhet, pris, rabatt, rabatt_kr, moms_sats) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
so if you have empty values it will cause problems as the ammount of values will missmatch with declared parameters.

The solution is following:
Use: JSon.class-> removeEntriesWhereValueNullOrEmpty(HashMap<String, String> map) 

Where it's used by [2020-12-29]:
It's beeing used for "Copy Invoice" purpose only and namely:
-> InvoiceB.copy_b__faktura_articles_to_db(ArrayList<HashMap<String, String>> faktura_articles, String fakturaId)
and
-> InvoiceB.copy(boolean isKreditFaktura)
________________________________________________________________________________________________________
[THREADS - THREDIFYING THE CODE][2020-10-05]

Search for tag: "#THREAD#" in the project ---> Almost not used as causing "sequential problems (something is executed before it should)" [2020-01-21]

See following construction, very useful, especially when "autofill" is used for comboboxes which requires to be run in the  "AWT" thread.

Thread x = new Thread(() -> {
		//
		// DO SOMETHING HERE
		//
		java.awt.EventQueue.invokeLater(() -> {
			// FILL JCOMBOBOXES HERE
		});
		//
	});
	//
	x.start();

________________________________________________________________________________________________________
[HOW TO USE "Validator.validateMaxInputLength(jli, 30)" with other validations][2020-09-29]
Use like following, other wise one validation will overwrite the other one:

if (Validator.validateMaxInputLength(jli, 30)) { // Validating with other methods only if passed
	Validator.validateOrgnr(jli);
	orgnr_additional(jli, ti);
}

________________________________________________________________________________________________________
[SENDING "EMPTY" AND "NULL" VALUES ][2020-10-13]

search for tag "[#EMPTY/NULL#]"

On [2020-10-13] i noticed that sending a "" (empty) value caused that the value was sent as a String = "null", see in the example below:
{"p";"Kocmoc4765","path";"null","u";"andrei.brassas@mixcont.com","port";"587","subject";"SMTP Test","host";"send.one.com","to";"andrej.brassas@gmail.com","from_name";"MixCont","body";"This is a test email","user";"mixcont","pass";"mixcont4765"}

________________________________________________________________________________________________________

[RECIEVING VALUE FROM PHP WHICH CONTAINS ";" (PHP->JAVA)] [2020-10-23] [UNSOLVED]

Consider the aquired string below, pay attention at "date_created";"2020-10-23 09;11;49"
HTTP REQ VAL: {"user";"guest_21_kocmoc1985@gmail.com","date_created";"2020-10-23 09;11;49"}

So the problem is that when i recieve such param -> "date_created";"2020-10-23 09;11;49"
the JSONToHashMap(String json, boolean reverse, int valueIndex, boolean replaceSpecialChars) -> Will failure, because of splitting difficulties because of to many ";".
So as the result it will put following into the map --------> map.put("date_created","2020-10-23 09")

So have a look at: JSon.class->JSONToHashMap(String json, boolean reverse, int valueIndex, boolean replaceSpecialChars)--->String[] jsonObj = entry.split(";")


The place where this problems exist is:
Home.class-> addRowJTableSharedUsers(HashMap<String, String> map,JTable table)---->.substring(0, 9)

________________________________________________________________________________________________________

[SEMI COLON, COMMA & PLUS SEND JSON (JAVA->PHP)][2020-08-25][2020-09-17][2021-04-13]

So the "special chars" which are replaced are: ":" -> "," -> "+" -> "&"

The replacement chars are the following: ":" -> "#" / "," -> "¤" / "+" -> "£" / "&" -> "~"

It's a problem when you have to send ":" (semicolon) as json to php. -> This fails because of HTTP URL "specialities"
It's also a problem sending "," (comma) as json to php. -> This is uploaded without problems to HTTP -> but fails when recieving
back in "JSon.JSONToHashMap()" -> Due to "split separator" = ","

Note: sending ";" is NOT a problem!

So have a look at (regarding both ":" and ","):
1. Basic ->  "tableInvertToHashMap(...)" -> look for: "val = val = GP_BUH.replaceColon(val,false);" -> replacing ":" with "#"
2. JSon -> "JSONToHashMap(...)" -> look for: "value = GP_BUH.replaceColon(val,true);" -> reverse replacing "#" with ":"

[2020-10-27] Consider also a very important case for copy/crediting of an invoice: JSon.class -> phpJsonResponseToHashMap__for_copy_and_krediting(String phpJsonString)
The comment from the method is following:
**This one is SUPER important. The problem i discovered on [2020-10-27]
was that if i copy/kredit an invoice it failed. So it turned out that
it was because of "," in the comment. So when the invoice was copied 
the special characters were not "converted" as usual. So if you
look here, consider "JSONToHashMap(json, false, 1, true, false)"
the last "false" argument makes so that the special character are converted
when copied**

OBS! Nothing on PHP side, 1000% SURE!

"artikelId";"4","kundId";"1","pris";"27.9","namn";"Dörrhandtag","komment";"Färg, guld","artikel_kategori";"A"
________________________________________________________________________________________________________
[SAVING EMPTY VALUES] [SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][2020-09-18] ****************************************************************OBS!********************************

See "Validator.class" -> "setValidated(JLinkInvert jli)" -> "jtf.setSaveEmptyStringValue();"
Also very very important -> "JTextFieldInvert.class" -> "setSaveEmptyStringValue()" -> pay attention at "rdi.isString()"

So if a "String" field is not controlled by "Validator.class" you will not be able so save an "EMPTY" value.
An example of such behaviour is when you want to erase an existing value and save an "empty" one.

For "STRING":
1. Make sure you have proper setting when configuring "public RowDataInvert[] getConfigTableInvert()"
so you must have true for the "isString" parameter the one marked with "*true*:
new RowDataInvertB(send_type_, DB.BUH_FAKTURA_SEND__SEND_TYPE, TABLE_SEND__SEND_TYPE, "", *true*, true, false);

2. You must use the "Validator.class" on that field -> it set's "setSaveEmptyStringValue()" on the element ->
this is set from the "Validator -> setValidated(JLinkInvert jli)"

For "FLOAT":
Since [2020-10-21] same technique is used for FLOAT.

1. "Validator.validateDigitalInput(jli)" -> it allows to leave the input empty, without setting it "invalidated".
2.  Inside the Validator.setValidated(JLinkInvert jli) method it calls "jtf.setSaveEmptyNumber()"


[OBS! IMPORTANT]
Both "setSaveEmptyStringValue()" & "jtf.setSaveEmptyNumber()" affect 
the one of the most important methods: "Basic.tableInvertToHashMap(Table table_invert, int startColumn, int jcomboParamToReturn)"


For "FLOAT" [OUTDATED - JUST FOR INFO]
1. Use: "Validator.validateDigitalInput(jli)" -> This one does not prevent from saving, but will set "validated=false" if the input is empty.
2. Use: "Basic_Buh.fieldsValidated(boolean insert)" -> And here it will prevent from inserting/updating if some "unvalidated" fields are present.

________________________________________________________________________________________________________
[JTABLE MARKING FORFALLNA FAKTUROR][2020-09-25]

The conditions of mark as "forfallen" is "forfallen==true && isFakturaTypeNormal==true && isBetald == false && isMakulerad == false"

See: "InvoiceB.class" -> "fillFakturaTable()" -> "table.setDefaultRenderer(Object.class, GP_BUH.getRendererForfalloDatum());"
________________________________________________________________________________________________________
[InvoiceB.class and InvoiceA_Insert - USE LONG NAMES][2020-08-14]

ArticlesTable in classes InvoiceB.class and InvoiceA_Insert shall contain "LONG NAMES" only.
So if we have following names: "Post;P,Hämtas;HAM" -> P is a "SHORT NAME" and "POST" is a "LONG NAME"

________________________________________________________________________________________________________

[SINGLE QUOTES APPENDED ON PHP SIDE][2020-08-07]

Since [2020-08-07] single quotes are appended to all parameters regardless if it's String or not.
For MySql it does not make any diff. BUT adding a String without "''" single quotes will fail!

Also adding "''" for a column which is a number/float will fail

________________________________________________________________________________________________________

[MYSQL - INSERTING ALWAYS WITH QUOTES - SUPER IMPORTANT] [2020-08-07]

So as it turned out, you can insert String and not string using always "''" (single quotes)

________________________________________________________________________________________________________

[REGARDING FAKTURA ID (fakturaId) TABLE: "buh_faktura"]

PHP_FUNC: 'fakturaToDb()'

The "fakturaId" is returned directly upon inserting of the "FAKTURA DATA" to SQL DB .
So the the php function implements both "insertion" and "getting". 

It seems that this construction will work good even in case of simultaneous usage by several users.

___________________________________________________________________________________________________________

[REGARDING FAKTURA NR (fakturanr) TABLE: "buh_faktura"]

PHP_FUNC: 'getLatestFakturaNr()'

JAVA_FUNC: 'getFakturaNr()'

The "fakturanr" is aquired before the insertion to the SQL DB but is done under same procedure ->
and namely after pressing the BUTTON for "commiting" of the Faktura.

So the php function returns the latest "fakturanr". Later in java i read the latest one and 
add (+1) for getting the nr for the faktura which is beiing inserted.

___________________________________________________________________________________________________________

[TABLE INVERT - DONT FORGET TO MARK ROWS -> String OR Not] [2020-08-07]

Setting "String=false/true" is used by: "JTextFieldInvert -> public void setSaveEmptyStringValue()" [2020-08-27]

It's done from "getConfigTableInvert()" methods

RowDataInvert pris = new RowDataInvertB(pris_, DB.BUH_F_ARTIKEL__PRIS, "PRIS", "", false, true, true); -----> the "false" means "NOT STRING"

For the moment [2020-08-12] i don't make any use of it.

___________________________________________________________________________________________________________
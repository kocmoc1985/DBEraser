________________________________________________________________________________________________________
[THREADS - THREDIFYING THE CODE][2020-10-05]

Search for tag: "#THREAD#" in the project

See following construction, very useful, especially when "autofill" is used for comboboxes which requires to be run in the  "AWT" thread.

Thread x = new Thread(() -> {
		//
		// DO SOMETHING HERE
		//
		java.awt.EventQueue.invokeLater(() -> {
			// FILL JCOMBOBOXES HERE
		});
		//
	});
	//
	x.start();

________________________________________________________________________________________________________
[HOW TO USE "Validator.validateMaxInputLength(jli, 30)" with other validations][2020-09-29]
Use like following, other wise one validation will overwrite the other one:

if (Validator.validateMaxInputLength(jli, 30)) { // Validating with other methods only if passed
	Validator.validateOrgnr(jli);
	orgnr_additional(jli, ti);
}

________________________________________________________________________________________________________
[SEMI COLON & COMMA SEND JSON][2020-08-25][2020-09-17]

It's a problem when you have to send ":" (semicolon) as json to php. -> This fails because of HTTP URL "specialities"
It's also a problem sending "," (comma) as json to php. -> This is uploaded without problems to HTTP -> but fails when recieving
back in "JSon.JSONToHashMap()" -> Due to "split separator" = ","

Note: sending ";" is NOT a problem!

So have a look at (regarding both ":" and ","):
1. Basic ->  "tableInvertToHashMap(...)" -> look for: "val = val = GP_BUH.replaceColon(val,false);" -> replacing ":" with "#"
2. JSon -> "JSONToHashMap(...)" -> look for: "value = GP_BUH.replaceColon(val,true);" -> reverse replacing "#" with ":"

OBS! Nothing on PHP side, 1000% SURE!

"artikelId";"4","kundId";"1","pris";"27.9","namn";"Dörrhandtag","komment";"Färg, guld","artikel_kategori";"A"
________________________________________________________________________________________________________
[SAVING EMPTY VALUES] [SUPER IMPORTANT][SUPER IMPORTANT][SUPER IMPORTANT][2020-09-18]

See "Validator.class" -> "setValidated(JLinkInvert jli)" -> "jtf.setSaveEmptyStringValue();"
Also very very important -> "JTextFieldInvert.class" -> "setSaveEmptyStringValue()" -> pay attention at "rdi.isString()"

So if a "String" field is not controlled by "Validator.class" you will not be able so save an "EMPTY" value.
An example of such behaviour is when you want to erase an existing value and save an "empty" one.

For "STRING":
1. Make sure you have proper setting when configuring "public RowDataInvert[] getConfigTableInvert()"
so you must have true for the "isString" parameter the one marked with "*true*:
new RowDataInvertB(send_type_, DB.BUH_FAKTURA_SEND__SEND_TYPE, TABLE_SEND__SEND_TYPE, "", *true*, true, false);

2. You must use the "Validator.class" on that field -> it set's "setSaveEmptyStringValue()" on the element

For "FLOAT":
1. Use: "Validator.validateDigitalInput(jli)" -> This one does not prevent from saving, but will set "validated=false" if the input is empty.
2. Use: "Basic_Buh.fieldsValidated(boolean insert)" -> And here it will prevent from inserting/updating if some "unvalidated" fields are present.

________________________________________________________________________________________________________
[JTABLE MARKING FORFALLNA FAKTUROR][2020-09-25]

The conditions of mark as "forfallen" is "forfallen==true && isFakturaTypeNormal==true && isBetald == false && isMakulerad == false"

See: "InvoiceB.class" -> "fillFakturaTable()" -> "table.setDefaultRenderer(Object.class, GP_BUH.getRendererForfalloDatum());"
________________________________________________________________________________________________________
[InvoiceB.class and InvoiceA_Insert - USE LONG NAMES][2020-08-14]

ArticlesTable in classes InvoiceB.class and InvoiceA_Insert shall contain "LONG NAMES" only.
So if we have following names: "Post;P,Hämtas;HAM" -> P is a "SHORT NAME" and "POST" is a "LONG NAME"

________________________________________________________________________________________________________

[SINGLE QUOTES APPENDED ON PHP SIDE][2020-08-07]

Since [2020-08-07] single quotes are appended to all parameters regardless if it's String or not.
For MySql it does not make any diff. BUT adding a String without "''" single quotes will fail!

Also adding "''" for a column which is a number/float will fail

________________________________________________________________________________________________________

[MYSQL - INSERTING ALWAYS WITH QUOTES - SUPER IMPORTANT] [2020-08-07]

So as it turned out, you can insert String and not string using always "''" (single quotes)

________________________________________________________________________________________________________

[REGARDING FAKTURA ID (fakturaId) TABLE: "buh_faktura"]

PHP_FUNC: 'fakturaToDb()'

The "fakturaId" is returned directly upon inserting of the "FAKTURA DATA" to SQL DB .
So the the php function implements both "insertion" and "getting". 

It seems that this construction will work good even in case of simultaneous usage by several users.

___________________________________________________________________________________________________________

[REGARDING FAKTURA NR (fakturanr) TABLE: "buh_faktura"]

PHP_FUNC: 'getLatestFakturaNr()'

JAVA_FUNC: 'getFakturaNr()'

The "fakturanr" is aquired before the insertion to the SQL DB but is done under same procedure ->
and namely after pressing the BUTTON for "commiting" of the Faktura.

So the php function returns the latest "fakturanr". Later in java i read the latest one and 
add (+1) for getting the nr for the faktura which is beiing inserted.

___________________________________________________________________________________________________________

[TABLE INVERT - DONT FORGET TO MARK ROWS -> String OR Not] [2020-08-07]

Setting "String=false/true" is used by: "JTextFieldInvert -> public void setSaveEmptyStringValue()" [2020-08-27]

It's done from "getConfigTableInvert()" methods

RowDataInvert pris = new RowDataInvertB(pris_, DB.BUH_F_ARTIKEL__PRIS, "PRIS", "", false, true, true); -----> the "false" means "NOT STRING"

For the moment [2020-08-12] i don't make any use of it.

___________________________________________________________________________________________________________